{# {% do view.registerAssetBundle('Solspace\\Freeform\\Resources\\Bundles\\FormattingTemplates\\Tailwind4LightBundle') %} #}

{% import "components/molecules/form/freeform-templates/mvb-design-system/_row.twig" as rowMacro %}

{# Render the opening form tag #}
{{ form.renderTag({

    attributes: {
        form: { class: "freeform-form", "data-freeform-tailwind": true },
        row: { class: "flex flex-wrap md:flex-nowrap md:items-start gap-4 mb-4 lg:mb-6" },
        novalidate: true,
    },
    buttons: {
        attributes: {
            container: { class: "mb-4" },
            column: { class: "" },
            buttonWrapper: {},
            submit: { class: "px-4 py-2 cursor-pointer inline-flex space-x-2 items-center text-base focus:outline-none transition-colors duration-150 bg-primary text-white hover:bg-primary-600 active:bg-primary-700 focus-visible:ring-cobblestone-400 focus-visible:ring-2 focus-visible:ring-offset-2" },
            back: { class: "px-4 py-2 cursor-pointer inline-flex space-x-2 items-center text-base focus:outline-none transition-colors duration-150 bg-primary text-white hover:bg-primary-600 active:bg-primary-700 focus-visible:ring-cobblestone-400 focus-visible:ring-2 focus-visible:ring-offset-2" },
            save: { class: "px-4 py-2 cursor-pointer inline-flex space-x-2 items-center text-base focus:outline-none transition-colors duration-150 bg-primary text-white hover:bg-primary-600 active:bg-primary-700 focus-visible:ring-cobblestone-400 focus-visible:ring-2 focus-visible:ring-offset-2" },
        },
    },
    fields: {
        "@global": {
            attributes: {
                container: { class: "w-full" },
                label: { class: "block text-base mb-1 font-semibold" },
                input: {
                    class: "block w-full text-base bg-white px-3 py-2 text-base outline outline-1 -outline-offset-1 outline-cobblestone-600 placeholder:text-cobblestone-400 focus:outline-2 focus:-outline-offset-2 focus:outline-persian-blue-400",
                },
                instructions: { class: "text-base mt-1.5 mb-1" },
                error: {
                    "-class": 'mt-1 text-sm text-red-600,',
                    "+class": "mt-1 text-base text-monza-600"
                },
            },
        },
        ":required": {
            attributes: {
                label: { "+class": "freeform-required" },
                input: { required: "" },
            },
        },
        ":errors": {
            attributes: {
                input: { "+class": "outline-1 -outline-offset-1 outline-monza-600" },
            },
        },
        "@checkboxes, @radios, @opinion-scale, @rating": {
            attributes: {
                container: { tag: "fieldset" },
                label: { tag: "legend" },
            },
        },
        '@richt-text': {
            attributes: {
                container: { "+class": "-mb-4" },
                input: { "+class": "outline-1 -outline-offset-1 outline-monza-600" },
            },
        },
        "@checkboxes, @radios": {
            attributes: {
                input: {
                    "-class": "block w-full px-3 py-2  text-base outline outline-1 -outline-offset-1 outline-cobblestone-600 placeholder:text-cobblestone-400 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-600 sm:text-base font-semibold",
                    "+class": "appearance-none size-4 border border-cobblestone-600 checked:border-persian-blue-600 checked:bg-persian-blue-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-persian-blue-400",
                },
                optionLabel: { class: "block text-base" },
            },
        },
        "@radios": {
            attributes: {
                input: {
                    "+class": "relative rounded-full before:absolute before:inset-1 before:rounded-full before:bg-white not-checked:before:hidden",
                },
                optionLabel: { class: "ml-2" },
            },
        },
        "@checkboxes": {
            attributes: {
                input: {
                    "+class": "col-start-1 row-start-1 rounded-sm bg-white indeterminate:border-primary-600 indeterminate:bg-primary-600",
                },
            },
        },
        "@opinion-scale": {
            attributes: {
                optionLabel: { "=class": "relative flex items-center justify-between cursor-pointer bg-cobblestone-100 px-3 py-1.5  text-base text-base outline-1 -outline-offset-1 outline-cobblestone-600  peer-checked:outline-2 peer-checked:outline-primary-600 hover:bg-cobblestone-100" },
                input: { "-class": "appearance-none block w-full" },
            },
        },
        "@rating": {
            attributes: {
                optionLabel: { "+class": "mr-1" },
            },
        },
        "@checkbox": {
            attributes: {
                label: {
                    class: "block text-base",
                    '-class': 'font-semibold'
                },
                input: {
                    "-class": "block w-full px-3 py-2  text-base outline outline-1 -outline-offset-1 outline-cobblestone-600 placeholder:text-cobblestone-400 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-600 sm:text-base",
                    "+class": "col-start-1 row-start-1 rounded-sm appearance-none size-4 rounded-full border border-cobblestone-600 bg-white checked:border-persian-blue-600 checked:bg-persian-blue-600 indeterminate:border-persian-blue-600 indeterminate:bg-persian-blue-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-persian-blue-600",
                },
            },
        },
        "@dropdown": {
            attributes: {
                input: {
                    "-class": "block px-3 placeholder:text-cobblestone-400",
                    "+class": "col-start-1 row-start-1 appearance-none pr-8 pl-3",
                },
            },
        },
        "@multiple-select": {
            attributes: {
                input: {
                    "-class": "placeholder:text-cobblestone-400",
                    "+class": "h-30 overflow-auto",
                },
            },
        },
        "@file-dnd": {
            attributes: {
                input: {
                    "-class": "block w-full outline outline-1 -outline-offset-1 outline-cobblestone-600 placeholder:text-cobblestone-400 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-600",
                    "+class": "justify-center  !border border-dashed !border-cobblestone-900/25",
                },
            },
        },
        '@rich-text': {
            attributes: {
                label: {
                    class: "hidden"
                },
                container:{
                    class: "rich-text"
                }
            },
        },
        '@html': {
            attributes: {
                label: {
                    class: "hidden"
                },
                container:{
                    class: "rich-text"
                }
            },
        },
        "@file": {
            attributes: {
                label: {
                    "=class": "freeform-upload-btn inline-flex items-center justify-center gap-2 px-3 py-2 text-base font-normal bg-white  cursor-pointer ring-1 ring-cobblestone-600 ring-inset hover:bg-cobblestone-100",
                },
                input: {
                    "=class": "freeform-file-upload-input absolute inset-0 w-0 h-0 opacity-0 cursor-pointer",
                },
            },
        },
        "@table": {
            attributes: {
                label: { "-class": "block" },
                input: { "-class": "appearance-none block w-full" },
            },
        },
        "@group": {
            attributes: {
                container: { "+class": "my-3 py-3 border-t border-b border-cobblestone-200" },
                label: { "-class": "font-medium", "+class": "font-semibold" },
            },
        },
        "@signature": {
            attributes: {
                input: { "=class": "inline-flex items-center justify-center gap-2 px-3 py-2 text-base font-normal bg-white  cursor-pointer ring-1 ring-cobblestone-600 ring-inset hover:bg-cobblestone-100" },
            },
        },
        "@stripe": {
            attributes: {
                input: { "-class": " bg-white px-3 py-2 text-base outline outline-1 -outline-offset-1 outline-cobblestone-600 placeholder:text-cobblestone-400 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-600 sm:text-base" },
            },
        },
    },
}) }}

{# Success and error message handling for non-AJAX forms #}


    {{ render('molecules.hint', {
        text: '<p>' ~ form.successMessage | t('freeform') ,
        variant: 'success',
        icon: {
            name: "check-circle",
            attributes: {
                "class": "text-2xl"
            }
        },
        attributes: {
            class: "freeform-success-banner mb-8 hidden"
        }
    }) }}


    {{ render('molecules.hint', {
        text: '<p>' ~ form.errorMessage | t('freeform') ~'</p>',
        variant: 'warning',
        icon: {
            name: "warning",
            attributes: {
                "class": "text-2xl"
            }
        },
        attributes: {
            class: "freeform-error-banner mb-8 hidden"
        }
    }) }}

{#
{% if form.errors|length %}
      <div class="mt-2 text-base text-monza-700">
        <ul role="list" class="list-disc space-y-1 pl-5">
          {% for error in form.errors %}
            <li>{{ error }}</li>
          {% endfor %}
        </ul>
      </div>
    {% endif %}
#}

{# Render page tabs if multi-page #}
{% if form.pages|length > 1 %}

    <nav class="mb-10" aria-label="Progress">
        <ol role="list" class="divide-y divide-cobblestone-600  border border-cobblestone-600 sm:flex sm:divide-y-0">
            {% for page in form.pages %}
                <li class="relative sm:flex sm:flex-1"{% if form.currentPage.index == page.index %} aria-current="step"{% endif %}>
                    <div class="group flex w-full items-center">
        <span class="flex items-center px-3 sm:px-6 py-2 sm:py-4 text-base font-medium">
          <span class="flex size-10 shrink-0 items-center justify-center rounded-full {% if form.currentPage.index > page.index %}bg-primary-600{% elseif form.currentPage.index == page.index %}border-2 border-primary-600{% else %}border-2 border-cobblestone-600{% endif %}">
          {% if form.currentPage.index > page.index %}
              <svg class="size-6 text-white" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"
                   data-slot="icon">
              <path fill-rule="evenodd"
                    d="M19.916 4.626a.75.75 0 0 1 .208 1.04l-9 13.5a.75.75 0 0 1-1.154.114l-6-6a.75.75 0 0 1 1.06-1.06l5.353 5.353 8.493-12.74a.75.75 0 0 1 1.04-.207Z"
                    clip-rule="evenodd"/>
            </svg>
          {% else %}
              <span class="{{ form.currentPage.index == page.index ? 'border-primary-600 text-primary-600 font-semibold' : 'border-cobblestone-600' }}">{{ page.index + '1' }}</span>
          {% endif %}
          </span>
          <span class="ml-4 text-base font-medium {% if form.currentPage.index > page.index %}text-cobblestone-900{% elseif form.currentPage.index == page.index %}text-primary-600 font-semibold{% else %}text-cobblestone-1000{% endif %}">{{ page.label }}</span>
        </span>
                    </div>
                    {% if (page.index + 1) != form.pages.count %}
                        <div class="absolute top-0 right-0 hidden h-full w-5 sm:block" aria-hidden="true">
                            <svg class="size-full text-cobblestone-600" viewBox="0 0 22 80" fill="none"
                                 preserveAspectRatio="none">
                                <path d="M0 -2L20 40L0 82" vector-effect="non-scaling-stroke" stroke="currentcolor"
                                      stroke-linejoin="round"/>
                            </svg>
                        </div>
                    {% endif %}
                </li>
            {% endfor %}
        </ol>
    </nav>
{% endif %}

{# Display form field rows and columns #}
{{ rowMacro.render(form.rows, form) }}

{# Render the closing form tag #}
{{ form.renderClosingTag }}
{{ freeform.loadFormSpecificScripts(form) }}
